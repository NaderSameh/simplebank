# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest

    services:
    # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: nader123
          POSTGRES_DB: simplebank
          POSTGRES_USER: root
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3

    - name: install go-migrate 
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.deb --output ./migrate.deb
        sudo dpkg -i migrate.deb 
        which migrate
    - name: run migrations
      run: make migrateup
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    

    - name: Test
      run: make test
